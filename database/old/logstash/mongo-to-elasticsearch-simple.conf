input {
  jdbc {
    jdbc_driver_library => "/home/willpcowan/code/projects/arbor-gpt3/back/logstash/MongoDB_JDBCs/dbschema-mongodb-jdbc/MongoDbJdbcDriver/mongojdbc4.0.jar"
    jdbc_driver_class => "Java::com.dbschema.MongoJdbcDriver"
    jdbc_connection_string => "jdbc:mongodb://localhost:27017/arbor"
    # jdbc_user => "root"
    jdbc_user => ""
    # jdbc_password => "changeme"
    schedule => "*/10 * * * * *"
    tracking_column => "updatedAt" # Track documents read based on the createdAt column (does this miss docs?)
		record_last_run => true # Save the data of last recorded doc into last_run_metadata_path 
	  last_run_metadata_path => "/home/willpcowan/code/projects/arbor-gpt3/back/logstash/.logstash_jdbc_last_run"
    statement => "db.concepts.aggregate([ 
        {
          $match: { 
            'updatedAt' : {
              '$gt': ISODate(:sql_last_value), 
              '$lt': new Date() 
            }
          }
        },
        {
          $project: { 
            _id: 0,
            uuid: { $toString: '$_id' },
            name: 1,
          }
        },
        { $sort : { updatedAt : 1 } }
    ]);"
  }
  #   statement => "db.concepts.aggregate([ 
  #       {
  #         '$match': { 
  #           _id : {$exists: true} 
  #         }
  #       },
  #       {
  #         $project: { 
  #           _id: 0,
  #           uuid: { $toString: '$_id' },
  #           name: 1,
  #         }
  #       }, 
  #   ]);"
  # }
  
}

# filter {
# 	# Copy ID before pruning, to give to elasticsearch document (rather than 2 IDs)
#   mutate {
#     copy => { "_id" => "[@metadata][id]"} 
#   }
# 	# Remove all fields except concept name
# 	prune { 
# 		whitelist_names => [ "^name$", "^_id$" ] # ^ and $ allow only 'name', not other patterns
# 	}
# }

output {
  stdout {
    codec => rubydebug
  }

  elasticsearch {
    hosts => ["http://localhost:9200"]
    user => "admin"
    password => "elasticadmin"
    # cacert => "/opt/logstash_mongodb/ca.crt"
    # ssl => true
    index => "concept-titles"
    action => "index"
    document_id => "%{[document][uuid]}" # APPARENTLY THIS WORKS
}
}